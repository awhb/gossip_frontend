[{"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx":"1","/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts":"2","/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx":"3","/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts":"4","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx":"5","/Users/hb/Desktop/Projects/gossip_frontend/src/components/MenuAppBar.tsx":"6","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Login.tsx":"7","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Home.jsx":"8","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx":"9","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx":"10","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts":"11","/Users/hb/Desktop/Projects/gossip_frontend/src/store/authSlice.ts":"12","/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx":"13","/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts":"14","/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts":"15","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts":"16","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts":"17"},{"size":384,"mtime":1674564804088,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1674564866079,"results":"20","hashOfConfig":"19"},{"size":969,"mtime":1674557830723,"results":"21","hashOfConfig":"19"},{"size":377,"mtime":1674555476228,"results":"22","hashOfConfig":"19"},{"size":1284,"mtime":1674565179198,"results":"23","hashOfConfig":"19"},{"size":1895,"mtime":1674555476156,"results":"24","hashOfConfig":"19"},{"size":3707,"mtime":1674569292665,"results":"25","hashOfConfig":"19"},{"size":635,"mtime":1674555476149,"results":"26","hashOfConfig":"19"},{"size":3154,"mtime":1674555476173,"results":"27","hashOfConfig":"19"},{"size":3294,"mtime":1674555476158,"results":"28","hashOfConfig":"19"},{"size":725,"mtime":1674556611064,"results":"29","hashOfConfig":"19"},{"size":1788,"mtime":1674555476223,"results":"30","hashOfConfig":"19"},{"size":230,"mtime":1674555476154,"results":"31","hashOfConfig":"19"},{"size":922,"mtime":1674560642069,"results":"32","hashOfConfig":"19"},{"size":334,"mtime":1674560147379,"results":"33","hashOfConfig":"19"},{"size":212,"mtime":1674561771516,"results":"34","hashOfConfig":"19"},{"size":345,"mtime":1674555476185,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4m237",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx",["94","95"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux-hooks\";\nimport { fetchPosts } from \"../store/post-actions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Posts: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allPosts = useAppSelector((state) => state.posts.all_posts);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  });\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {allPosts.map((post) => (\n          <Grid item xs={12} sm={6} md={4} key={post.id}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h6\">{post.title}</Typography>\n              <Typography>{post.creator}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Posts;","/Users/hb/Desktop/Projects/gossip_frontend/src/components/MenuAppBar.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Login.tsx",["96"],[],"import React, { useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../store/authSlice';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Login: React.FC = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const { error, isLoading } = useSelector(selectAuth);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(login({ username, password }));\n  };\n\n  return localStorage.hasOwnProperty(\"token\") ? <Navigate to=\"/\" /> : (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n      <Paper elevation={3} style={{ padding: '20px' }}>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <h2>Login</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <br />\n          {isLoading && (<LoadingSpinner />)}\n          {error && (\n            <Typography variant=\"body2\" color=\"error\">\n              {error}\n            </Typography>\n          )}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n            Login\n          </Button>\n        </form>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Login;\n\n// import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { TextField, Button } from '@material-ui/core';\n// import { useDispatch } from 'react-redux';\n// import { login } from '../store/authSlice';\n// import { useTypedSelector } from '../store';\n\n// const Login: React.FC = () => {\n// const [username, setUsername] = useState('');\n// const [password, setPassword] = useState('');\n// const auth = useTypedSelector(state => state.auth);\n// const navigate = useNavigate();\n// const dispatch = useDispatch();\n\n// async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n//     e.preventDefault();\n//     await dispatch(login({username, password}));\n//     if (!auth.error) {\n//         navigate('/');\n//     }\n// }\n\n// return (\n//     <div>\n//         <form onSubmit={handleSubmit}>\n//             <TextField\n//                 id=\"username\"\n//                 label=\"Username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//             />\n//             <br />\n//             <TextField\n//                 id=\"password\"\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n//             <br />\n//             <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                 Login\n//             </Button>\n//         </form>\n//         {auth.error && (\n//             <p>{auth.error}</p>\n//         )}\n//     </div>\n// );\n","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Home.jsx",["97"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div className=\"vw-100 vh-100 primary-color d-flex align-items-center justify-content-center\">\n    <div className=\"jumbotron jumbotron-fluid bg-transparent\">\n      <div className=\"container secondary-color\">\n        <h1 className=\"display-4\">Food Recipes</h1>\n        <p className=\"lead\">\n          Test3\n        </p>\n        <hr className=\"my-4\" />\n        <Link\n          to=\"/posts\"\n          className=\"btn btn-lg custom-button\"\n          role=\"button\"\n        >\n          View Recipes\n        </Link>\n      </div>\n    </div>\n  </div>\n);","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx",["98","99"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nconst Recipe = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState({ ingredients: \"\" });\n\n  useEffect(() => {\n    const url = `/api/v1/show/${params.id}`;\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => setRecipe(response))\n      .catch(() => navigate(\"/recipes\"));\n  }, [params.id]);\n\n  const addHtmlEntities = (str) => {\n    return String(str).replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n  };\n\n  const deleteRecipe = () => {\n    const url = `/api/v1/destroy/${params.id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(() => navigate(\"/recipes\"))\n      .catch((error) => console.log(error.message));\n  };\n\n  const ingredientList = () => {\n    let ingredientList = \"No ingredients available\";\n\n    if (recipe.ingredients.length > 0) {\n      ingredientList = recipe.ingredients\n        .split(\",\")\n        .map((ingredient, index) => (\n          <li key={index} className=\"list-group-item\">\n            {ingredient}\n          </li>\n        ));\n    }\n\n    return ingredientList;\n  };\n\n  const recipeInstruction = addHtmlEntities(recipe.instruction);\n\n  return (\n    <div className=\"\">\n      <div className=\"hero position-relative d-flex align-items-center justify-content-center\">\n        <img\n          src={recipe.image}\n          alt={`${recipe.name} image`}\n          className=\"img-fluid position-absolute\"\n        />\n        <div className=\"overlay bg-dark position-absolute\" />\n        <h1 className=\"display-4 position-relative text-white\">\n          {recipe.name}\n        </h1>\n      </div>\n      <div className=\"container py-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-3\">\n            <ul className=\"list-group\">\n              <h5 className=\"mb-2\">Ingredients</h5>\n              {ingredientList()}\n            </ul>\n          </div>\n          <div className=\"col-sm-12 col-lg-7\">\n            <h5 className=\"mb-2\">Preparation Instructions</h5>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: `${recipeInstruction}`,\n              }}\n            />\n          </div>\n          <div className=\"col-sm-12 col-lg-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={deleteRecipe}\n            >\n              Delete Recipe\n            </button>\n          </div>\n        </div>\n        <Link to=\"/recipes\" className=\"btn btn-link\">\n          Back to recipes\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx",["100","101","102"],[],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst NewRecipe = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instruction, setInstruction] = useState(\"\");\n\n  const stripHtmlEntities = (str) => {\n    return String(str)\n      .replace(/\\n/g, \"<br> <br>\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n  };\n\n  const onChange = (event, setFunction) => {\n    setFunction(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const url = \"/api/v1/recipes/create\";\n\n    if (name.length == 0 || ingredients.length == 0 || instruction.length == 0)\n      return;\n\n    const body = {\n      name,\n      ingredients,\n      instruction: stripHtmlEntities(instruction),\n    };\n\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => navigate(`/recipe/${response.id}`))\n      .catch((error) => console.log(error.message));\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-lg-6 offset-lg-3\">\n          <h1 className=\"font-weight-normal mb-5\">\n            Add a new recipe to our awesome recipe collection.\n          </h1>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeName\">Recipe name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"recipeName\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setName)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeIngredients\">Ingredients</label>\n              <input\n                type=\"text\"\n                name=\"ingredients\"\n                id=\"recipeIngredients\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setIngredients)}\n              />\n              <small id=\"ingredientsHelp\" className=\"form-text text-muted\">\n                Separate each ingredient with a comma.\n              </small>\n            </div>\n            <label htmlFor=\"instruction\">Preparation Instructions</label>\n            <textarea\n              className=\"form-control\"\n              id=\"instruction\"\n              name=\"instruction\"\n              rows=\"5\"\n              required\n              onChange={(event) => onChange(event, setInstruction)}\n            />\n            <button type=\"submit\" className=\"btn custom-button mt-3\">\n              Create Recipe\n            </button>\n            <Link to=\"/recipes\" className=\"btn btn-link mt-3\">\n              Back to recipes\n            </Link>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/authSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts",["103","104"],[],"import Api from \"./Api\";\nimport { PostModel } from \"../../src/models/redux-model\";\n\nexport default {\n  async getAllPosts() {\n    var response = await Api().get(\"/posts\");\n    return response.data;\n  },\n  async getParticularPost(post_id:number) {\n    var response = await Api().get(`/posts/${post_id}`);\n    return response.data;\n  }\n}","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts",["105"],[],"import axios from 'axios';\n\nexport default () => {\n  return axios.create({\n    baseURL: 'http://127.0.0.1:3000/api/v1',\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    }\n  });\n};","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts",[],[],{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":27,"column":9,"nodeType":"108","messageId":"109","endLine":27,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":4,"column":1,"nodeType":"114","endLine":23,"endColumn":3},{"ruleId":"115","severity":1,"message":"116","line":20,"column":6,"nodeType":"117","endLine":20,"endColumn":17,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":68,"column":9,"nodeType":"121","endLine":72,"endColumn":11},{"ruleId":"122","severity":1,"message":"123","line":25,"column":21,"nodeType":"124","messageId":"125","endLine":25,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":25,"column":48,"nodeType":"124","messageId":"125","endLine":25,"endColumn":50},{"ruleId":"122","severity":1,"message":"123","line":25,"column":75,"nodeType":"124","messageId":"125","endLine":25,"endColumn":77},{"ruleId":"106","severity":1,"message":"126","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":19},{"ruleId":"112","severity":1,"message":"127","line":4,"column":1,"nodeType":"114","endLine":13,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":3,"column":1,"nodeType":"114","endLine":10,"endColumn":3},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'navigate' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["128"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PostModel' is defined but never used.","Assign object to a variable before exporting as module default",{"desc":"129","fix":"130"},"Update the dependencies array to be: [navigate, params.id]",{"range":"131","text":"132"},[606,617],"[navigate, params.id]"]
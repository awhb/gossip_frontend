[{"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx":"1","/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts":"2","/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx":"3","/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts":"4","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx":"5","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Login.tsx":"6","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Home.jsx":"7","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx":"8","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx":"9","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts":"10","/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx":"11","/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts":"12","/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts":"13","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts":"14","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts":"15","/Users/hb/Desktop/Projects/gossip_frontend/src/components/AppBar.tsx":"16","/Users/hb/Desktop/Projects/gossip_frontend/src/store/userSlice.ts":"17","/Users/hb/Desktop/Projects/gossip_frontend/src/store/errorSlice.ts":"18","/Users/hb/Desktop/Projects/gossip_frontend/src/store/user-actions.ts":"19","/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts":"20","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Signup.tsx":"21"},{"size":384,"mtime":1674595735112,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1674564866079,"results":"24","hashOfConfig":"23"},{"size":1381,"mtime":1674595327634,"results":"25","hashOfConfig":"23"},{"size":453,"mtime":1674590733099,"results":"26","hashOfConfig":"23"},{"size":1284,"mtime":1674565179198,"results":"27","hashOfConfig":"23"},{"size":2427,"mtime":1674601773274,"results":"28","hashOfConfig":"23"},{"size":635,"mtime":1674555476149,"results":"29","hashOfConfig":"23"},{"size":3154,"mtime":1674555476173,"results":"30","hashOfConfig":"23"},{"size":3294,"mtime":1674555476158,"results":"31","hashOfConfig":"23"},{"size":719,"mtime":1674583146448,"results":"32","hashOfConfig":"23"},{"size":230,"mtime":1674555476154,"results":"33","hashOfConfig":"23"},{"size":2372,"mtime":1674592954991,"results":"34","hashOfConfig":"23"},{"size":902,"mtime":1674583299444,"results":"35","hashOfConfig":"23"},{"size":205,"mtime":1674594228157,"results":"36","hashOfConfig":"23"},{"size":345,"mtime":1674555476185,"results":"37","hashOfConfig":"23"},{"size":3328,"mtime":1674601860008,"results":"38","hashOfConfig":"23"},{"size":1135,"mtime":1674600854416,"results":"39","hashOfConfig":"23"},{"size":512,"mtime":1674582789570,"results":"40","hashOfConfig":"23"},{"size":3404,"mtime":1674601020367,"results":"41","hashOfConfig":"23"},{"size":927,"mtime":1674600548969,"results":"42","hashOfConfig":"23"},{"size":2321,"mtime":1674593550276,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4m237",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts",[],[],["117","118"],"/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx",["119","120"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux-hooks\";\nimport { fetchPosts } from \"../store/post-actions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Posts: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allPosts = useAppSelector((state) => state.posts.all_posts);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  });\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {allPosts.map((post) => (\n          <Grid item xs={12} sm={6} md={4} key={post.id}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h6\">{post.title}</Typography>\n              <Typography>{post.creator}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Posts;","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Login.tsx",["121","122","123"],[],"import React, { useEffect, useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\nimport { loginUser } from '../store/user-actions';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Login: React.FC = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useAppSelector(state => state.errors.error);\n  const isLoading = useAppSelector(state => state.users.isLoading);\n  const auth = useAppSelector(state => state.users.current_user.id != 0);\n  const isLoggedIn = auth && localStorage.hasOwnProperty(\"token\");\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(loginUser(username, password));\n    navigate('/');\n  };\n\n  return isLoggedIn ? <Navigate to=\"/\" /> : (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\n      <Paper elevation={3} style={{ padding: '20px' }}>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <h2>Login</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <br />\n          {isLoading && (<LoadingSpinner />)}\n          {error && (\n            <Typography variant=\"body2\" color=\"error\">\n              {error}\n            </Typography>\n          )}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n            Login\n          </Button>\n        </form>\n      </Paper>\n    </Grid>  \n  );\n};\n\nexport default Login;\n",["124","125"],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Home.jsx",["126"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div className=\"vw-100 vh-100 primary-color d-flex align-items-center justify-content-center\">\n    <div className=\"jumbotron jumbotron-fluid bg-transparent\">\n      <div className=\"container secondary-color\">\n        <h1 className=\"display-4\">Food Recipes</h1>\n        <p className=\"lead\">\n          Test3\n        </p>\n        <hr className=\"my-4\" />\n        <Link\n          to=\"/posts\"\n          className=\"btn btn-lg custom-button\"\n          role=\"button\"\n        >\n          View Recipes\n        </Link>\n      </div>\n    </div>\n  </div>\n);",["127","128"],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx",["129","130"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nconst Recipe = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState({ ingredients: \"\" });\n\n  useEffect(() => {\n    const url = `/api/v1/show/${params.id}`;\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => setRecipe(response))\n      .catch(() => navigate(\"/recipes\"));\n  }, [params.id]);\n\n  const addHtmlEntities = (str) => {\n    return String(str).replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n  };\n\n  const deleteRecipe = () => {\n    const url = `/api/v1/destroy/${params.id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(() => navigate(\"/recipes\"))\n      .catch((error) => console.log(error.message));\n  };\n\n  const ingredientList = () => {\n    let ingredientList = \"No ingredients available\";\n\n    if (recipe.ingredients.length > 0) {\n      ingredientList = recipe.ingredients\n        .split(\",\")\n        .map((ingredient, index) => (\n          <li key={index} className=\"list-group-item\">\n            {ingredient}\n          </li>\n        ));\n    }\n\n    return ingredientList;\n  };\n\n  const recipeInstruction = addHtmlEntities(recipe.instruction);\n\n  return (\n    <div className=\"\">\n      <div className=\"hero position-relative d-flex align-items-center justify-content-center\">\n        <img\n          src={recipe.image}\n          alt={`${recipe.name} image`}\n          className=\"img-fluid position-absolute\"\n        />\n        <div className=\"overlay bg-dark position-absolute\" />\n        <h1 className=\"display-4 position-relative text-white\">\n          {recipe.name}\n        </h1>\n      </div>\n      <div className=\"container py-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-3\">\n            <ul className=\"list-group\">\n              <h5 className=\"mb-2\">Ingredients</h5>\n              {ingredientList()}\n            </ul>\n          </div>\n          <div className=\"col-sm-12 col-lg-7\">\n            <h5 className=\"mb-2\">Preparation Instructions</h5>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: `${recipeInstruction}`,\n              }}\n            />\n          </div>\n          <div className=\"col-sm-12 col-lg-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={deleteRecipe}\n            >\n              Delete Recipe\n            </button>\n          </div>\n        </div>\n        <Link to=\"/recipes\" className=\"btn btn-link\">\n          Back to recipes\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx",["131","132","133"],[],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst NewRecipe = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instruction, setInstruction] = useState(\"\");\n\n  const stripHtmlEntities = (str) => {\n    return String(str)\n      .replace(/\\n/g, \"<br> <br>\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n  };\n\n  const onChange = (event, setFunction) => {\n    setFunction(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const url = \"/api/v1/recipes/create\";\n\n    if (name.length == 0 || ingredients.length == 0 || instruction.length == 0)\n      return;\n\n    const body = {\n      name,\n      ingredients,\n      instruction: stripHtmlEntities(instruction),\n    };\n\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => navigate(`/recipe/${response.id}`))\n      .catch((error) => console.log(error.message));\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-lg-6 offset-lg-3\">\n          <h1 className=\"font-weight-normal mb-5\">\n            Add a new recipe to our awesome recipe collection.\n          </h1>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeName\">Recipe name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"recipeName\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setName)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeIngredients\">Ingredients</label>\n              <input\n                type=\"text\"\n                name=\"ingredients\"\n                id=\"recipeIngredients\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setIngredients)}\n              />\n              <small id=\"ingredientsHelp\" className=\"form-text text-muted\">\n                Separate each ingredient with a comma.\n              </small>\n            </div>\n            <label htmlFor=\"instruction\">Preparation Instructions</label>\n            <textarea\n              className=\"form-control\"\n              id=\"instruction\"\n              name=\"instruction\"\n              rows=\"5\"\n              required\n              onChange={(event) => onChange(event, setInstruction)}\n            />\n            <button type=\"submit\" className=\"btn custom-button mt-3\">\n              Create Recipe\n            </button>\n            <Link to=\"/recipes\" className=\"btn btn-link mt-3\">\n              Back to recipes\n            </Link>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts",["134","135"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts",["136"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/AppBar.tsx",["137","138","139","140","141","142"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Button from '@mui/material/Button';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport userSlice from '../store/userSlice';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\nimport { logoutUser } from '../store/user-actions';\n\n// Useful for toggling sort\n{/* \n  const [auth, setAuth] = React.useState(true);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAuth(event.target.checked);\n  };\n<FormGroup>\n<FormControlLabel\n  control={\n    <Switch\n      checked={auth}\n      onChange={handleChange}\n      aria-label=\"login switch\"\n    />\n  }\n  label={auth ? 'Logout' : 'Login'}\n/>\n</FormGroup> */\n}\n\nexport default function MenuAppBar() {\n  const auth = useAppSelector(state => state.users.current_user.id != 0);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const isLoggedIn = auth && localStorage.hasOwnProperty(\"token\");\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const logOut = () => {\n    dispatch(logoutUser());\n    setAnchorEl(null);\n    navigate(\"/\");\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Gossip On Rails\n          </Typography>\n          {isLoggedIn && (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>My Account</MenuItem>\n                <MenuItem onClick={logOut}>Logout</MenuItem>\n              </Menu>\n            </div>\n          )}\n          {!isLoggedIn && (\n            <Link to='/login'>\n              <Button color=\"inherit\" sx={{ flexGrow: 0 }}>Login</Button>\n            </Link>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","/Users/hb/Desktop/Projects/gossip_frontend/src/store/userSlice.ts",["143"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/errorSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/user-actions.ts",["144"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts",["145","146"],[],"import Api from \"./Api\";\nimport { UserModel } from \"../../src/models/redux-model\";\n\nexport default {\nasync getAllUsers() {\nvar response = await Api().get(\"/users\");\nreturn response.data;\n},\nasync getSelectedUser(user_id:number) {\nvar response = await Api().get(`/users/${user_id}`);\nreturn response.data;\n},\nasync createUser(username:string, password:string) {\nvar response = await Api().post(`/users`, {username, password});\nreturn response.data;\n},\nasync updateUser(user_id:number, username:string, password:string) {\nvar response = await Api().put(`/users/${user_id}`, {username, password});\nreturn response.data;\n},\nasync deleteUser(user_id:number) {\nvar response = await Api().delete(`/users/${user_id}`);\nreturn response.data;\n},\n// login\nasync loginUser(username:string, password:string) {\n  var response = await Api().post(`/login`, { \"user\": {\"username\": username, \"password\": password}});\n  return response.data;\n},\n}","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Signup.tsx",["147","148"],[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"157","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":14},{"ruleId":"153","severity":1,"message":"158","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"159","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":28,"column":68,"nodeType":"162","messageId":"163","endLine":28,"endColumn":70},{"ruleId":"149","replacedBy":"164"},{"ruleId":"151","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":4,"column":1,"nodeType":"168","endLine":23,"endColumn":3},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"169","severity":1,"message":"170","line":20,"column":6,"nodeType":"171","endLine":20,"endColumn":17,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":68,"column":9,"nodeType":"175","endLine":72,"endColumn":11},{"ruleId":"160","severity":1,"message":"176","line":25,"column":21,"nodeType":"162","messageId":"163","endLine":25,"endColumn":23},{"ruleId":"160","severity":1,"message":"176","line":25,"column":48,"nodeType":"162","messageId":"163","endLine":25,"endColumn":50},{"ruleId":"160","severity":1,"message":"176","line":25,"column":75,"nodeType":"162","messageId":"163","endLine":25,"endColumn":77},{"ruleId":"153","severity":1,"message":"177","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"166","severity":1,"message":"178","line":4,"column":1,"nodeType":"168","endLine":25,"endColumn":2},{"ruleId":"166","severity":1,"message":"167","line":3,"column":1,"nodeType":"168","endLine":10,"endColumn":3},{"ruleId":"153","severity":1,"message":"179","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":14},{"ruleId":"153","severity":1,"message":"180","line":9,"column":8,"nodeType":"155","messageId":"156","endLine":9,"endColumn":24},{"ruleId":"153","severity":1,"message":"181","line":10,"column":8,"nodeType":"155","messageId":"156","endLine":10,"endColumn":17},{"ruleId":"153","severity":1,"message":"182","line":16,"column":8,"nodeType":"155","messageId":"156","endLine":16,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":21,"column":1,"nodeType":"185","messageId":"186","endLine":38,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":41,"column":68,"nodeType":"162","messageId":"163","endLine":41,"endColumn":70},{"ruleId":"153","severity":1,"message":"187","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":19},{"ruleId":"153","severity":1,"message":"188","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":21},{"ruleId":"153","severity":1,"message":"189","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"166","severity":1,"message":"178","line":4,"column":1,"nodeType":"168","endLine":30,"endColumn":2},{"ruleId":"153","severity":1,"message":"158","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"159","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["190"],["191"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["192"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '===' and instead saw '=='.","'PostModel' is defined but never used.","Assign object to a variable before exporting as module default","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'userSlice' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'userService' is defined but never used.","'useNavigate' is defined but never used.","'UserModel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [navigate, params.id]",{"range":"195","text":"196"},[606,617],"[navigate, params.id]"]
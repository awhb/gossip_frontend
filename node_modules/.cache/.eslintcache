[{"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx":"1","/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts":"2","/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx":"3","/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts":"4","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx":"5","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx":"6","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx":"7","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts":"8","/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx":"9","/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts":"10","/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts":"11","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts":"12","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts":"13","/Users/hb/Desktop/Projects/gossip_frontend/src/store/userSlice.ts":"14","/Users/hb/Desktop/Projects/gossip_frontend/src/store/errorSlice.ts":"15","/Users/hb/Desktop/Projects/gossip_frontend/src/store/user-actions.ts":"16","/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts":"17","/Users/hb/Desktop/Projects/gossip_frontend/src/components/MenuAppBar.tsx":"18","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/User.tsx":"19","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/forms/UpdateUser.tsx":"20","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/forms/Signup.tsx":"21","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/forms/Login.tsx":"22","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Home.tsx":"23","/Users/hb/Desktop/Projects/gossip_frontend/src/components/BasicThreadList.tsx":"24"},{"size":384,"mtime":1674595735112,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1674564866079,"results":"27","hashOfConfig":"26"},{"size":1800,"mtime":1674636870668,"results":"28","hashOfConfig":"26"},{"size":453,"mtime":1674590733099,"results":"29","hashOfConfig":"26"},{"size":1284,"mtime":1674565179198,"results":"30","hashOfConfig":"26"},{"size":3154,"mtime":1674555476173,"results":"31","hashOfConfig":"26"},{"size":3294,"mtime":1674555476158,"results":"32","hashOfConfig":"26"},{"size":719,"mtime":1674583146448,"results":"33","hashOfConfig":"26"},{"size":230,"mtime":1674555476154,"results":"34","hashOfConfig":"26"},{"size":2501,"mtime":1674634474993,"results":"35","hashOfConfig":"26"},{"size":902,"mtime":1674583299444,"results":"36","hashOfConfig":"26"},{"size":205,"mtime":1674594228157,"results":"37","hashOfConfig":"26"},{"size":345,"mtime":1674555476185,"results":"38","hashOfConfig":"26"},{"size":1135,"mtime":1674600854416,"results":"39","hashOfConfig":"26"},{"size":512,"mtime":1674582789570,"results":"40","hashOfConfig":"26"},{"size":3585,"mtime":1674634411428,"results":"41","hashOfConfig":"26"},{"size":1064,"mtime":1674631208845,"results":"42","hashOfConfig":"26"},{"size":3046,"mtime":1674628112040,"results":"43","hashOfConfig":"26"},{"size":2108,"mtime":1674631547878,"results":"44","hashOfConfig":"26"},{"size":2415,"mtime":1674635616782,"results":"45","hashOfConfig":"26"},{"size":2539,"mtime":1674635428215,"results":"46","hashOfConfig":"26"},{"size":2657,"mtime":1674635979621,"results":"47","hashOfConfig":"26"},{"size":395,"mtime":1674636303185,"results":"48","hashOfConfig":"26"},{"size":466,"mtime":1674636292972,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4m237",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts",[],[],["130","131"],"/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx",["132","133","134","135","136"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx",["137","138"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux-hooks\";\nimport { fetchPosts } from \"../store/post-actions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Posts: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allPosts = useAppSelector((state) => state.posts.all_posts);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  });\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {allPosts.map((post) => (\n          <Grid item xs={12} sm={6} md={4} key={post.id}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h6\">{post.title}</Typography>\n              <Typography>{post.creator}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Posts;","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx",["139","140"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nconst Recipe = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState({ ingredients: \"\" });\n\n  useEffect(() => {\n    const url = `/api/v1/show/${params.id}`;\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => setRecipe(response))\n      .catch(() => navigate(\"/recipes\"));\n  }, [params.id]);\n\n  const addHtmlEntities = (str) => {\n    return String(str).replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n  };\n\n  const deleteRecipe = () => {\n    const url = `/api/v1/destroy/${params.id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(() => navigate(\"/recipes\"))\n      .catch((error) => console.log(error.message));\n  };\n\n  const ingredientList = () => {\n    let ingredientList = \"No ingredients available\";\n\n    if (recipe.ingredients.length > 0) {\n      ingredientList = recipe.ingredients\n        .split(\",\")\n        .map((ingredient, index) => (\n          <li key={index} className=\"list-group-item\">\n            {ingredient}\n          </li>\n        ));\n    }\n\n    return ingredientList;\n  };\n\n  const recipeInstruction = addHtmlEntities(recipe.instruction);\n\n  return (\n    <div className=\"\">\n      <div className=\"hero position-relative d-flex align-items-center justify-content-center\">\n        <img\n          src={recipe.image}\n          alt={`${recipe.name} image`}\n          className=\"img-fluid position-absolute\"\n        />\n        <div className=\"overlay bg-dark position-absolute\" />\n        <h1 className=\"display-4 position-relative text-white\">\n          {recipe.name}\n        </h1>\n      </div>\n      <div className=\"container py-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-3\">\n            <ul className=\"list-group\">\n              <h5 className=\"mb-2\">Ingredients</h5>\n              {ingredientList()}\n            </ul>\n          </div>\n          <div className=\"col-sm-12 col-lg-7\">\n            <h5 className=\"mb-2\">Preparation Instructions</h5>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: `${recipeInstruction}`,\n              }}\n            />\n          </div>\n          <div className=\"col-sm-12 col-lg-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={deleteRecipe}\n            >\n              Delete Recipe\n            </button>\n          </div>\n        </div>\n        <Link to=\"/recipes\" className=\"btn btn-link\">\n          Back to recipes\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;",["141","142"],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx",["143","144","145"],[],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst NewRecipe = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instruction, setInstruction] = useState(\"\");\n\n  const stripHtmlEntities = (str) => {\n    return String(str)\n      .replace(/\\n/g, \"<br> <br>\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n  };\n\n  const onChange = (event, setFunction) => {\n    setFunction(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const url = \"/api/v1/recipes/create\";\n\n    if (name.length == 0 || ingredients.length == 0 || instruction.length == 0)\n      return;\n\n    const body = {\n      name,\n      ingredients,\n      instruction: stripHtmlEntities(instruction),\n    };\n\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => navigate(`/recipe/${response.id}`))\n      .catch((error) => console.log(error.message));\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-lg-6 offset-lg-3\">\n          <h1 className=\"font-weight-normal mb-5\">\n            Add a new recipe to our awesome recipe collection.\n          </h1>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeName\">Recipe name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"recipeName\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setName)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeIngredients\">Ingredients</label>\n              <input\n                type=\"text\"\n                name=\"ingredients\"\n                id=\"recipeIngredients\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setIngredients)}\n              />\n              <small id=\"ingredientsHelp\" className=\"form-text text-muted\">\n                Separate each ingredient with a comma.\n              </small>\n            </div>\n            <label htmlFor=\"instruction\">Preparation Instructions</label>\n            <textarea\n              className=\"form-control\"\n              id=\"instruction\"\n              name=\"instruction\"\n              rows=\"5\"\n              required\n              onChange={(event) => onChange(event, setInstruction)}\n            />\n            <button type=\"submit\" className=\"btn custom-button mt-3\">\n              Create Recipe\n            </button>\n            <Link to=\"/recipes\" className=\"btn btn-link mt-3\">\n              Back to recipes\n            </Link>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts",["146","147"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts",["148"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/userSlice.ts",["149"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/errorSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/user-actions.ts",["150"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts",["151","152"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/MenuAppBar.tsx",["153","154"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/User.tsx",["155","156"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/forms/UpdateUser.tsx",["157","158","159","160"],[],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../../hooks/redux-hooks';\nimport { updateUser } from '../../store/user-actions';\nimport { TextField, Button } from '@material-ui/core';\nimport {\n  Typography,\n  Paper,\n  makeStyles\n} from '@material-ui/core';\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst UpdateUser: React.FC = () => {\n  const classes = useStyles();\n  const { user_id } = useParams();\n  const current_user = useAppSelector(state => state.users.current_user);\n  const [username, setUsername] = useState(current_user.username);\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const isRightUser = current_user.id == parseInt(user_id as string);\n\n  useEffect(() => {\n    if (!isRightUser) {\n      navigate('/');\n    }\n  }, [isLoading, error, navigate]);\n  \n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(updateUser(parseInt(user_id as string), username, password));\n    if (!error) {\n      navigate(`/users/${user_id}`);\n    }\n  }\n\n  return !isRightUser ? <Navigate to=\"/\" /> :(\n    <div>\n      <Paper elevation={3} style={{ padding: '20px' }}>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <h2>Login</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <br />\n          {error && (\n            <Typography variant=\"body2\" color=\"error\">\n              {error}\n            </Typography>\n          )}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n            Login\n          </Button>\n        </form>\n      </Paper>\n    </div>\n\n  );\n};\n\nexport default UpdateUser;",["161","162"],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/forms/Signup.tsx",["163","164","165","166","167","168"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/forms/Login.tsx",["169","170","171","172"],[],"import React, { useEffect, useState } from 'react';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux-hooks';\nimport { loginUser } from '../../store/user-actions';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Login: React.FC = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useAppSelector(state => state.users.isLoading);\n  const error = useAppSelector(state => state.errors.error);\n  const auth = useAppSelector(state => state.users.current_user.id != 0);\n  const isLoggedIn = auth && localStorage.hasOwnProperty(\"token\");\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/');\n    }\n  }, [isLoading, error, navigate]);\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(loginUser(username, password));\n    if (localStorage.hasOwnProperty(\"token\")) {\n      navigate('/');\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\n      <Paper elevation={3} style={{ padding: '20px' }}>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <h2>Login</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <br />\n          <Link to={`/signup`}>\n            <Button>Sign Up</Button>\n          </Link>\n          {isLoading && (<LoadingSpinner />)}\n          {error && (\n            <Typography variant=\"body2\" color=\"error\">\n              {error}\n            </Typography>\n          )}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n            Login\n          </Button>\n        </form>\n      </Paper>\n    </Grid>  \n  );\n};\n\nexport default Login;\n","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Home.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/BasicThreadList.tsx",[],[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"181","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":17},{"ruleId":"182","severity":2,"message":"183","line":41,"column":55,"nodeType":"184","messageId":"185","endLine":41,"endColumn":59},{"ruleId":"182","severity":2,"message":"186","line":42,"column":50,"nodeType":"184","messageId":"185","endLine":42,"endColumn":57},{"ruleId":"182","severity":2,"message":"187","line":43,"column":62,"nodeType":"184","messageId":"185","endLine":43,"endColumn":72},{"ruleId":"177","severity":1,"message":"188","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"189","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":20,"column":6,"nodeType":"192","endLine":20,"endColumn":17,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":68,"column":9,"nodeType":"196","endLine":72,"endColumn":11},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"197","severity":1,"message":"198","line":25,"column":21,"nodeType":"199","messageId":"200","endLine":25,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":25,"column":48,"nodeType":"199","messageId":"200","endLine":25,"endColumn":50},{"ruleId":"197","severity":1,"message":"198","line":25,"column":75,"nodeType":"199","messageId":"200","endLine":25,"endColumn":77},{"ruleId":"177","severity":1,"message":"201","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":4,"column":1,"nodeType":"204","endLine":25,"endColumn":2},{"ruleId":"202","severity":1,"message":"205","line":3,"column":1,"nodeType":"204","endLine":10,"endColumn":3},{"ruleId":"177","severity":1,"message":"206","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"207","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":21},{"ruleId":"177","severity":1,"message":"208","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":4,"column":1,"nodeType":"204","endLine":30,"endColumn":2},{"ruleId":"177","severity":1,"message":"209","line":15,"column":8,"nodeType":"179","messageId":"180","endLine":15,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":20,"column":1,"nodeType":"212","messageId":"213","endLine":37,"endColumn":2},{"ruleId":"177","severity":1,"message":"214","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":59,"column":21,"nodeType":"199","messageId":"200","endLine":59,"endColumn":23},{"ruleId":"177","severity":1,"message":"215","line":30,"column":21,"nodeType":"179","messageId":"180","endLine":30,"endColumn":33},{"ruleId":"177","severity":1,"message":"216","line":31,"column":17,"nodeType":"179","messageId":"180","endLine":31,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":34,"column":39,"nodeType":"199","messageId":"200","endLine":34,"endColumn":41},{"ruleId":"190","severity":1,"message":"217","line":40,"column":6,"nodeType":"192","endLine":40,"endColumn":34,"suggestions":"218"},{"ruleId":"173","replacedBy":"219"},{"ruleId":"175","replacedBy":"220"},{"ruleId":"177","severity":1,"message":"214","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":18},{"ruleId":"177","severity":1,"message":"221","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":13},{"ruleId":"177","severity":1,"message":"215","line":27,"column":21,"nodeType":"179","messageId":"180","endLine":27,"endColumn":33},{"ruleId":"177","severity":1,"message":"216","line":28,"column":17,"nodeType":"179","messageId":"180","endLine":28,"endColumn":25},{"ruleId":"197","severity":1,"message":"222","line":29,"column":68,"nodeType":"199","messageId":"200","endLine":29,"endColumn":70},{"ruleId":"190","severity":1,"message":"223","line":39,"column":6,"nodeType":"192","endLine":39,"endColumn":34,"suggestions":"224"},{"ruleId":"177","severity":1,"message":"214","line":2,"column":16,"nodeType":"179","messageId":"180","endLine":2,"endColumn":24},{"ruleId":"177","severity":1,"message":"221","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":13},{"ruleId":"197","severity":1,"message":"222","line":29,"column":68,"nodeType":"199","messageId":"200","endLine":29,"endColumn":70},{"ruleId":"190","severity":1,"message":"223","line":39,"column":6,"nodeType":"192","endLine":39,"endColumn":34,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"@typescript-eslint/no-unused-vars","'Posts' is defined but never used.","Identifier","unusedVar","'NewRecipe' is defined but never used.","react/jsx-no-undef","'Post' is not defined.","JSXIdentifier","undefined","'NewPost' is not defined.","'UpdatePost' is not defined.","'useState' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["228"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PostModel' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","'userService' is defined but never used.","'useNavigate' is defined but never used.","'UserModel' is defined but never used.","'userSlice' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Navigate' is defined but never used.","'setIsLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isRightUser'. Either include it or remove the dependency array.",["229"],["226"],["227"],"'Box' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.",["230"],["231"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},"Update the dependencies array to be: [navigate, params.id]",{"range":"239","text":"240"},"Update the dependencies array to be: [isLoading, error, navigate, isRightUser]",{"range":"241","text":"242"},"Update the dependencies array to be: [isLoading, error, navigate, isLoggedIn]",{"range":"243","text":"244"},{"range":"245","text":"244"},[606,617],"[navigate, params.id]",[1187,1215],"[isLoading, error, navigate, isRightUser]",[1227,1255],"[isLoading, error, navigate, isLoggedIn]",[1265,1293]]
[{"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx":"1","/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts":"2","/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx":"3","/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts":"4","/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx":"5","/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts":"6","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts":"7","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts":"8","/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts":"9","/Users/hb/Desktop/Projects/gossip_frontend/src/components/MenuAppBar.tsx":"10","/Users/hb/Desktop/Projects/gossip_frontend/src/store/errors/errorSlice.ts":"11","/Users/hb/Desktop/Projects/gossip_frontend/src/store/posts/postSlice.ts":"12","/Users/hb/Desktop/Projects/gossip_frontend/src/store/users/userSlice.ts":"13","/Users/hb/Desktop/Projects/gossip_frontend/src/store/comments/commentSlice.ts":"14","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/auth/Signup.tsx":"15","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/auth/Home.tsx":"16","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/auth/Login.tsx":"17","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/users/User.tsx":"18","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/users/UpdateUser.tsx":"19","/Users/hb/Desktop/Projects/gossip_frontend/src/store/users/user-actions.ts":"20","/Users/hb/Desktop/Projects/gossip_frontend/src/store/categories/categoriesSlice.ts":"21","/Users/hb/Desktop/Projects/gossip_frontend/src/components/ToggleSearchBar.tsx":"22","/Users/hb/Desktop/Projects/gossip_frontend/src/store/posts/post-actions.ts":"23","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx":"24","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/posts/Post.tsx":"25","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/posts/NewPost.tsx":"26","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/posts/UpdatePost.tsx":"27","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/comments/UpdateComment.tsx":"28","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Comments.tsx":"29","/Users/hb/Desktop/Projects/gossip_frontend/src/store/comments/comment-actions.ts":"30","/Users/hb/Desktop/Projects/gossip_frontend/src/services/commentService.ts":"31","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/comments/NewComment.tsx":"32"},{"size":384,"mtime":1674595735112,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1674564866079,"results":"35","hashOfConfig":"34"},{"size":2015,"mtime":1674840117995,"results":"36","hashOfConfig":"34"},{"size":661,"mtime":1674641760676,"results":"37","hashOfConfig":"34"},{"size":230,"mtime":1674555476154,"results":"38","hashOfConfig":"34"},{"size":838,"mtime":1674640201373,"results":"39","hashOfConfig":"34"},{"size":205,"mtime":1674594228157,"results":"40","hashOfConfig":"34"},{"size":345,"mtime":1674555476185,"results":"41","hashOfConfig":"34"},{"size":971,"mtime":1674639939037,"results":"42","hashOfConfig":"34"},{"size":2759,"mtime":1674840717085,"results":"43","hashOfConfig":"34"},{"size":508,"mtime":1674638765169,"results":"44","hashOfConfig":"34"},{"size":878,"mtime":1674895951463,"results":"45","hashOfConfig":"34"},{"size":1134,"mtime":1674638811568,"results":"46","hashOfConfig":"34"},{"size":788,"mtime":1674659963111,"results":"47","hashOfConfig":"34"},{"size":2545,"mtime":1674638809378,"results":"48","hashOfConfig":"34"},{"size":591,"mtime":1674839760664,"results":"49","hashOfConfig":"34"},{"size":2653,"mtime":1674839923439,"results":"50","hashOfConfig":"34"},{"size":2120,"mtime":1674638809387,"results":"51","hashOfConfig":"34"},{"size":2422,"mtime":1674840239616,"results":"52","hashOfConfig":"34"},{"size":3593,"mtime":1674638811556,"results":"53","hashOfConfig":"34"},{"size":512,"mtime":1674643898125,"results":"54","hashOfConfig":"34"},{"size":1985,"mtime":1674653204161,"results":"55","hashOfConfig":"34"},{"size":2509,"mtime":1674640471080,"results":"56","hashOfConfig":"34"},{"size":1726,"mtime":1674897372259,"results":"57","hashOfConfig":"34"},{"size":3366,"mtime":1674901100179,"results":"58","hashOfConfig":"34"},{"size":2460,"mtime":1674660130559,"results":"59","hashOfConfig":"34"},{"size":2606,"mtime":1674659444328,"results":"60","hashOfConfig":"34"},{"size":1867,"mtime":1674665857398,"results":"61","hashOfConfig":"34"},{"size":2364,"mtime":1674900339602,"results":"62","hashOfConfig":"34"},{"size":2581,"mtime":1674899874849,"results":"63","hashOfConfig":"34"},{"size":843,"mtime":1674900610816,"results":"64","hashOfConfig":"34"},{"size":1545,"mtime":1674665269290,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4m237",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts",[],[],["176","177"],"/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx",[],[],["178","179"],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts",["180"],[],"import Api from \"./Api\";\n\nexport default {\n  async getAllPosts() {\n    var response = await Api().get(\"/posts\");\n    return response.data;\n  },\n  async getSelectedPost(id:number) {\n    var response = await Api().get(`/posts/${id}`);\n    return response.data;\n  },\n  async createPost(title:string, content:string, categories: string[], user_id: number) {\n    var response = await Api().post(`/posts`, { \"post\" : {title, content, categories, user_id}});\n    return response.data;\n  },\n  async updatePost(id:number, title:string, content:string, categories: string[], user_id: number) {\n    var response = await Api().put(`/posts/${id}`, { \"post\" : {title, content, categories, user_id}});\n    return response.data;\n  },  \n  async deletePost(id:number) {\n    var response = await Api().delete(`/posts/${id}`);\n    return response.data;\n  }\n}","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts",["181"],[],"import axios from 'axios';\n\nexport default () => {\n  return axios.create({\n    baseURL: 'http://127.0.0.1:3000',\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    }\n  });\n};","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts",["182"],[],"import Api from \"./Api\";\n\nexport default {\n  async getAllUsers() {\n    var response = await Api().get(\"/users\");\n    return response.data;\n  },\n  async getSelectedUser(id: number) {\n    var response = await Api().get(`/users/${id}`);\n    return response.data;\n  },\n  async createUser(username: string, password: string) {\n    var response = await Api().post(`/users`, { username, password });\n    return response.data;\n  },\n  async updateUser(id: number, username: string, password: string) {\n    var response = await Api().put(`/users/${id}`, { \"user\": { \"id\": id, \"username\": username, \"password\": password } });\n    return response.data;\n  },\n  async deleteUser(id: number) {\n    var response = await Api().delete(`/users/${id}`);\n    return response.data;\n  },\n  // login\n  async loginUser(username: string, password: string) {\n    var response = await Api().post(`/login`, { \"user\": { \"username\": username, \"password\": password } });\n    return response.data;\n  },\n}",["183","184"],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/MenuAppBar.tsx",["185"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/errors/errorSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/posts/postSlice.ts",[],[],["186","187"],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/users/userSlice.ts",["188"],[],"import { UserModel, UserArrayModel } from \"../../models/redux-model\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport userService from \"../../services/userService\";\n\nconst initialUserState:UserArrayModel = {\n  all_users: [],\n  selected_user: {\n    \"id\": 0,\n    \"username\": \"\",\n    \"created_at\": new Date(\"2023-01-25\"),\n  },\n  current_user: {\n    \"id\": 0,\n    \"username\": \"\",\n    \"created_at\": new Date(\"2023-01-25\"),\n  },\n  isLoading: false,\n  \n}\n\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: initialUserState,\n  reducers: {\n    setUsers(state, action: PayloadAction<UserModel[]>) {\n      state.all_users = action.payload;\n    }, \n    setSelectedUser(state, action: PayloadAction<UserModel>) {\n      state.selected_user = action.payload;\n    },\n    setIsLoading(state, action: PayloadAction<boolean>) {\n      state.isLoading = action.payload;\n    },\n    setCurrentUser(state, action: PayloadAction<UserModel>) {\n      state.current_user = action.payload;\n    },\n    clearCurrentUser(state) {\n      state.current_user = initialUserState.current_user;\n    },\n  },\n});\n\nexport default userSlice;","/Users/hb/Desktop/Projects/gossip_frontend/src/store/comments/commentSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/auth/Signup.tsx",["189","190","191","192","193","194"],[],"import React, { useEffect, useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux-hooks';\nimport { createUser } from '../../store/users/user-actions';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Signup: React.FC = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const auth = useAppSelector(state => state.users.current_user.id != 0);\n  const isLoggedIn = auth && localStorage.hasOwnProperty(\"token\");\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/');\n    }\n  }, [isLoading, error, navigate]);\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(createUser(username, password));\n    if (localStorage.hasOwnProperty(\"token\")) {\n      navigate('/');\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\n      <Paper elevation={3} style={{ padding: '20px' }}>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <h2>Sign Up</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <br />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <br />\n          {isLoading && (<LoadingSpinner />)}\n          {error && (\n            <Typography variant=\"body2\" color=\"error\">\n              {error}\n            </Typography>\n          )}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n            Sign Up\n          </Button>\n        </form>\n      </Paper>\n    </Grid>  \n  );\n};\n\nexport default Signup;\n\n","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/auth/Home.tsx",["195","196","197"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/auth/Login.tsx",["198","199","200","201"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/users/User.tsx",["202","203"],[],"import React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../../hooks/redux-hooks';\nimport { fetchSelectedUser, deleteUser } from '../../store/users/user-actions';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n  },\n  icon: {\n    fontSize: '6rem',\n    marginRight: theme.spacing(2),\n  },\n  text: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nconst User: React.FC = () => {\n  const classes = useStyles();\n  const { user_id } = useParams();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const user = useAppSelector(state => state.users.selected_user);\n  const current_user_id = useAppSelector(state => state.users.current_user.id);\n\n  useEffect(() => {\n    dispatch(fetchSelectedUser(parseInt(user_id as string)));\n  }, [dispatch, user_id]);\n\n  const handleDelete = () => {\n    dispatch(deleteUser(parseInt(user_id as string)));\n    navigate(\"/\");\n  };\n\n  return (\n    <Paper>\n      <Grid container className={classes.root}>\n        <AccountCircle className={classes.icon} />\n        <div className={classes.text}>\n          <Typography variant=\"h4\">{user.username}</Typography>\n          <Typography variant=\"body2\">created at {user.created_at.toISOString}</Typography>\n          {\n            user.id == current_user_id &&\n            <>\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n                Delete User\n              </Button>\n              <Link to={`/users/${current_user_id}/update`}>\n                <Button variant=\"contained\" color=\"primary\">\n                  Update User\n                </Button>\n              </Link>\n            </>\n          }\n        </div>\n      </Grid>\n    </Paper>\n  );\n\n};\n\nexport default User;","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/users/UpdateUser.tsx",["204","205","206","207"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/users/user-actions.ts",["208"],[],"import userSlice from \"./userSlice\";\nimport { AnyAction } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../index\";\nimport { AuthModel, ErrorModel, UserModel } from \"../../models/redux-model\";\nimport userService from \"../../services/userService\";\nimport { useNavigate } from \"react-router-dom\";\nimport errorSlice from \"../errors/errorSlice\";\n\nexport const userActions = userSlice.actions;\nexport const errorActions = errorSlice.actions;\n\n// index\nexport const fetchUsers = (): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch,getState) => {\n    const response: UserModel[] = await userService.getAllUsers();\n    dispatch(userActions.setUsers(response));\n  };\n}\n\n// show\nexport const fetchSelectedUser = (user_id:number): ThunkAction<void, RootState, unknown, AnyAction> => { \n  return async (dispatch,getState) => {\n    const response: UserModel = await userService.getSelectedUser(user_id);\n    dispatch(userActions.setSelectedUser(response));\n  };\n}\n\n// create/sign up\nexport const createUser = (username: string, password:string): ThunkAction<void, RootState, unknown, AnyAction> => { \n  return async (dispatch,getState) => {\n    dispatch(userActions.setIsLoading(true));\n    const response: AuthModel | ErrorModel = await userService.createUser(username, password);\n    if (\"error\" in response) {\n      dispatch(userActions.setIsLoading(false));\n      dispatch(errorActions.setError(response.error));\n    } else { \n      dispatch(userActions.setCurrentUser(response.user));\n      localStorage.setItem(\"token\", response.token);\n      dispatch(userActions.setIsLoading(false));\n      dispatch(errorActions.clearError());\n    }\n  };\n}\n\n// update\nexport const updateUser = (user_id: number, username: string, password:string): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch,getState) => {\n    const response: UserModel | ErrorModel = await userService.updateUser(user_id, username, password);\n    if (\"error\" in response) {\n      dispatch(errorActions.setError(response.error));\n    } else { \n      dispatch(errorActions.clearError());\n      dispatch(userActions.setSelectedUser(response));\n    }\n  };\n}\n\n// delete\nexport const deleteUser = (user_id:number): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch,getState) => {\n    const response: UserModel[] | ErrorModel = await userService.deleteUser(user_id);\n    if (\"error\" in response) {\n      dispatch(errorActions.setError(response.error));\n    } else { \n      dispatch(errorActions.clearError());\n      dispatch(userActions.setUsers(response));\n      localStorage.removeItem(\"token\");\n    }\n  };\n}\n\n// login\nexport const loginUser = (username:string, password:string): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch,getState) => {\n    dispatch(userActions.setIsLoading(true));\n    const response: AuthModel | ErrorModel = await userService.loginUser(username, password);\n    if (\"error\" in response) {\n      dispatch(userActions.setIsLoading(false));\n      dispatch(errorActions.setError(response.error));\n    } else {\n      dispatch(userActions.setCurrentUser(response.user));\n      localStorage.setItem(\"token\", response.token);\n      dispatch(userActions.setIsLoading(false));\n      dispatch(errorActions.clearError());\n    }\n  };\n}\n\n// logout\nexport const logoutUser = (): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch,getState) => {\n    localStorage.removeItem(\"token\");\n    dispatch(userActions.clearCurrentUser());\n  };\n}","/Users/hb/Desktop/Projects/gossip_frontend/src/store/categories/categoriesSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/ToggleSearchBar.tsx",["209"],[],"import React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../hooks/redux-hooks';\nimport postSlice from '../store/posts/postSlice';\nimport { TextField, FormControlLabel, Switch } from '@material-ui/core';\nimport { PostModel } from '../models/redux-model';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport const postActions = postSlice.actions;\n\n\nconst ToggleSearchBar: React.FC = () => {\n  const classes = useStyles();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchByCategory, setSearchByCategory] = useState(false);\n  const allPosts = useAppSelector(state => state.posts.all_posts);\n  let filteredPosts: PostModel[];\n  const dispatch = useAppDispatch();\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    const searchTerms = searchValue.toLowerCase().split(',');\n    const filtered_posts = allPosts.filter(post => searchByCategory\n      ? post.categories.some(category => searchTerms.includes(category))\n      : post.title.toLowerCase().includes(searchValue.toLowerCase()));\n    dispatch(postActions.setFilteredPosts(filtered_posts));\n  };\n\n  const handleSearchByCategory = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchByCategory(e.target.checked);\n  };\n\n  return (\n    <FormControl className={classes.formControl}>\n      <TextField\n        id=\"search\"\n        label=\"Search\"\n        value={searchValue}\n        onChange={handleSearch}\n      />\n      <FormControlLabel\n        control={<Switch checked={searchByCategory} onChange={handleSearchByCategory}\n          name=\"searchBy\"\n          color=\"primary\"\n        />\n        }\n        label={!searchByCategory ? 'Search by Title' : 'Search by Category'}\n      />\n    </FormControl>\n  );\n};\n\nexport default ToggleSearchBar;\n\n","/Users/hb/Desktop/Projects/gossip_frontend/src/store/posts/post-actions.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx",["210"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/posts/Post.tsx",["211","212","213"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/posts/NewPost.tsx",["214","215","216","217"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/posts/UpdatePost.tsx",["218","219"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/comments/UpdateComment.tsx",["220","221","222"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Comments.tsx",["223","224"],[],"import { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../hooks/redux-hooks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Card, CardContent, Typography } from '@material-ui/core';\nimport { CommentModel } from '../models/redux-model';\nimport { deleteComment, fetchComments } from '../store/comments/comment-actions';\nimport { fetchSelectedPost } from '../store/posts/post-actions';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  commentBody: {\n    fontSize: 16,\n    whiteSpace: 'pre-wrap',\n    paddingBottom: '1em',\n  },\n  commentCard: {\n    marginBottom: '1em',\n  },\n  metadata: {\n    fontSize: 14,\n  },\n});\n\n\n\nconst Comments: React.FC = () => {\n  const classes = useStyles();\n  const comments: CommentModel[] = useAppSelector(state => state.comments.all_comments);\n  const dispatch = useAppDispatch();\n  const current_user = useAppSelector(state => state.users.current_user);\n  const current_post = useAppSelector(state => state.posts.selected_post);\n  const navigate = useNavigate();\n  const { post_id } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchSelectedPost(parseInt(post_id as string)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (current_post.id !== 0) {\n      dispatch(fetchComments(current_post.id));\n    }\n  }, [dispatch]);\n\n  const handleDelete = (id: number) => {\n    dispatch(deleteComment(id));\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <Link to={`/comments/new`}>Create Comment</Link>\n      {comments.map(comment => (\n        <Card className={classes.commentCard} key={comment.id}>\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textPrimary\" className={classes.commentBody} component=\"p\">\n              {comment.content}\n            </Typography>\n            {comment.user_id === current_user.id &&\n              <div>\n                <Button variant=\"contained\" color=\"primary\" component={Link} to={`/comments/${comment.id}/update`}>\n                  Update\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={()=> handleDelete(comment.id)}>\n                  Delete\n                </Button>\n              </div>}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default Comments;\n",["225","226"],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/comments/comment-actions.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/commentService.ts",["227"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/pages/comments/NewComment.tsx",["228","229","230"],[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"231","replacedBy":"235"},{"ruleId":"233","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":3,"column":1,"nodeType":"239","endLine":24,"endColumn":2},{"ruleId":"237","severity":1,"message":"240","line":3,"column":1,"nodeType":"239","endLine":10,"endColumn":3},{"ruleId":"237","severity":1,"message":"238","line":3,"column":1,"nodeType":"239","endLine":29,"endColumn":2},{"ruleId":"231","replacedBy":"241"},{"ruleId":"233","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":16,"column":8,"nodeType":"245","messageId":"246","endLine":16,"endColumn":17},{"ruleId":"231","replacedBy":"247"},{"ruleId":"233","replacedBy":"248"},{"ruleId":"243","severity":1,"message":"249","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":19},{"ruleId":"243","severity":1,"message":"250","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":18},{"ruleId":"243","severity":1,"message":"251","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":13},{"ruleId":"243","severity":1,"message":"252","line":27,"column":21,"nodeType":"245","messageId":"246","endLine":27,"endColumn":33},{"ruleId":"243","severity":1,"message":"253","line":28,"column":17,"nodeType":"245","messageId":"246","endLine":28,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":29,"column":68,"nodeType":"256","messageId":"257","endLine":29,"endColumn":70},{"ruleId":"258","severity":1,"message":"259","line":39,"column":6,"nodeType":"260","endLine":39,"endColumn":34,"suggestions":"261"},{"ruleId":"243","severity":1,"message":"262","line":3,"column":17,"nodeType":"245","messageId":"246","endLine":3,"endColumn":26},{"ruleId":"243","severity":1,"message":"263","line":9,"column":11,"nodeType":"245","messageId":"246","endLine":9,"endColumn":19},{"ruleId":"243","severity":1,"message":"264","line":10,"column":11,"nodeType":"245","messageId":"246","endLine":10,"endColumn":19},{"ruleId":"243","severity":1,"message":"250","line":2,"column":16,"nodeType":"245","messageId":"246","endLine":2,"endColumn":24},{"ruleId":"243","severity":1,"message":"251","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":29,"column":68,"nodeType":"256","messageId":"257","endLine":29,"endColumn":70},{"ruleId":"258","severity":1,"message":"265","line":39,"column":6,"nodeType":"260","endLine":39,"endColumn":24,"suggestions":"266"},{"ruleId":"243","severity":1,"message":"250","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":18},{"ruleId":"254","severity":1,"message":"267","line":59,"column":21,"nodeType":"256","messageId":"257","endLine":59,"endColumn":23},{"ruleId":"243","severity":1,"message":"252","line":30,"column":21,"nodeType":"245","messageId":"246","endLine":30,"endColumn":33},{"ruleId":"243","severity":1,"message":"253","line":31,"column":17,"nodeType":"245","messageId":"246","endLine":31,"endColumn":25},{"ruleId":"254","severity":1,"message":"267","line":34,"column":39,"nodeType":"256","messageId":"257","endLine":34,"endColumn":41},{"ruleId":"258","severity":1,"message":"268","line":40,"column":6,"nodeType":"260","endLine":40,"endColumn":34,"suggestions":"269"},{"ruleId":"243","severity":1,"message":"270","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":21},{"ruleId":"243","severity":1,"message":"271","line":24,"column":7,"nodeType":"245","messageId":"246","endLine":24,"endColumn":33},{"ruleId":"243","severity":1,"message":"251","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":13},{"ruleId":"243","severity":1,"message":"272","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"273","line":53,"column":11,"nodeType":"245","messageId":"246","endLine":53,"endColumn":20},{"ruleId":"258","severity":1,"message":"274","line":66,"column":8,"nodeType":"260","endLine":66,"endColumn":24,"suggestions":"275"},{"ruleId":"243","severity":1,"message":"262","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"276","line":4,"column":22,"nodeType":"245","messageId":"246","endLine":4,"endColumn":39},{"ruleId":"243","severity":1,"message":"277","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"278","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":13},{"ruleId":"243","severity":1,"message":"277","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"278","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":13},{"ruleId":"243","severity":1,"message":"277","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"278","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":13},{"ruleId":"243","severity":1,"message":"279","line":27,"column":9,"nodeType":"245","messageId":"246","endLine":27,"endColumn":25},{"ruleId":"258","severity":1,"message":"280","line":38,"column":6,"nodeType":"260","endLine":38,"endColumn":16,"suggestions":"281"},{"ruleId":"258","severity":1,"message":"282","line":44,"column":6,"nodeType":"260","endLine":44,"endColumn":16,"suggestions":"283"},{"ruleId":"231","replacedBy":"284"},{"ruleId":"233","replacedBy":"285"},{"ruleId":"237","severity":1,"message":"238","line":3,"column":1,"nodeType":"239","endLine":24,"endColumn":2},{"ruleId":"243","severity":1,"message":"262","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"277","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"278","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":13},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],["286"],["287"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default",["286"],["287"],"@typescript-eslint/no-unused-vars","'userSlice' is defined but never used.","Identifier","unusedVar",["286"],["287"],"'userService' is defined but never used.","'Navigate' is defined but never used.","'Box' is defined but never used.","'setIsLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["288"],"'useEffect' is defined but never used.","'allPosts' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isLoggedIn' and 'navigate'. Either include them or remove the dependency array.",["289"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'isRightUser'. Either include it or remove the dependency array.",["290"],"'useNavigate' is defined but never used.","'filteredPosts' is defined but never used.","'useState' is defined but never used.","'isCreator' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["291"],"'fetchSelectedPost' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'selected_comment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post_id'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has a missing dependency: 'current_post.id'. Either include it or remove the dependency array.",["293"],["286"],["287"],"no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [isLoading, error, navigate, isLoggedIn]",{"range":"306","text":"307"},"Update the dependencies array to be: [isLoading, error, isLoggedIn, navigate]",{"range":"308","text":"309"},"Update the dependencies array to be: [isLoading, error, navigate, isRightUser]",{"range":"310","text":"311"},"Update the dependencies array to be: [post, navigate, dispatch]",{"range":"312","text":"313"},"Update the dependencies array to be: [dispatch, post_id]",{"range":"314","text":"315"},"Update the dependencies array to be: [current_post.id, dispatch]",{"range":"316","text":"317"},[1233,1261],"[isLoading, error, navigate, isLoggedIn]",[1271,1289],"[isLoading, error, isLoggedIn, navigate]",[1193,1221],"[isLoading, error, navigate, isRightUser]",[1962,1978],"[post, navigate, dispatch]",[1252,1262],"[dispatch, post_id]",[1378,1388],"[current_post.id, dispatch]"]
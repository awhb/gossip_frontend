[{"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx":"1","/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts":"2","/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx":"3","/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts":"4","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx":"5","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Login.tsx":"6","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Home.jsx":"7","/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx":"8","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx":"9","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts":"10","/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx":"11","/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts":"12","/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts":"13","/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts":"14","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts":"15","/Users/hb/Desktop/Projects/gossip_frontend/src/components/AppBar.tsx":"16","/Users/hb/Desktop/Projects/gossip_frontend/src/store/userSlice.ts":"17","/Users/hb/Desktop/Projects/gossip_frontend/src/store/errorSlice.ts":"18","/Users/hb/Desktop/Projects/gossip_frontend/src/store/user-actions.ts":"19","/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts":"20"},{"size":384,"mtime":1674564804088,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1674564866079,"results":"23","hashOfConfig":"22"},{"size":1284,"mtime":1674573154875,"results":"24","hashOfConfig":"22"},{"size":453,"mtime":1674590733099,"results":"25","hashOfConfig":"22"},{"size":1284,"mtime":1674565179198,"results":"26","hashOfConfig":"22"},{"size":2320,"mtime":1674591549557,"results":"27","hashOfConfig":"22"},{"size":635,"mtime":1674555476149,"results":"28","hashOfConfig":"22"},{"size":3154,"mtime":1674555476173,"results":"29","hashOfConfig":"22"},{"size":3294,"mtime":1674555476158,"results":"30","hashOfConfig":"22"},{"size":719,"mtime":1674583146448,"results":"31","hashOfConfig":"22"},{"size":230,"mtime":1674555476154,"results":"32","hashOfConfig":"22"},{"size":2554,"mtime":1674585646823,"results":"33","hashOfConfig":"22"},{"size":902,"mtime":1674583299444,"results":"34","hashOfConfig":"22"},{"size":212,"mtime":1674561771516,"results":"35","hashOfConfig":"22"},{"size":345,"mtime":1674555476185,"results":"36","hashOfConfig":"22"},{"size":2846,"mtime":1674573509908,"results":"37","hashOfConfig":"22"},{"size":1209,"mtime":1674589220662,"results":"38","hashOfConfig":"22"},{"size":512,"mtime":1674582789570,"results":"39","hashOfConfig":"22"},{"size":3320,"mtime":1674589865163,"results":"40","hashOfConfig":"22"},{"size":892,"mtime":1674586703907,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1b4m237",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hb/Desktop/Projects/gossip_frontend/src/index.tsx",[],[],["109","110"],"/Users/hb/Desktop/Projects/gossip_frontend/src/reportWebVitals.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/App.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/index.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Posts.tsx",["111","112"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux-hooks\";\nimport { fetchPosts } from \"../store/post-actions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Posts: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allPosts = useAppSelector((state) => state.posts.all_posts);\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  });\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {allPosts.map((post) => (\n          <Grid item xs={12} sm={6} md={4} key={post.id}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h6\">{post.title}</Typography>\n              <Typography>{post.creator}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Posts;","/Users/hb/Desktop/Projects/gossip_frontend/src/pages/Login.tsx",["113","114"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Home.jsx",["115"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div className=\"vw-100 vh-100 primary-color d-flex align-items-center justify-content-center\">\n    <div className=\"jumbotron jumbotron-fluid bg-transparent\">\n      <div className=\"container secondary-color\">\n        <h1 className=\"display-4\">Food Recipes</h1>\n        <p className=\"lead\">\n          Test3\n        </p>\n        <hr className=\"my-4\" />\n        <Link\n          to=\"/posts\"\n          className=\"btn btn-lg custom-button\"\n          role=\"button\"\n        >\n          View Recipes\n        </Link>\n      </div>\n    </div>\n  </div>\n);",["116","117"],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/Recipe.jsx",["118","119"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nconst Recipe = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState({ ingredients: \"\" });\n\n  useEffect(() => {\n    const url = `/api/v1/show/${params.id}`;\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => setRecipe(response))\n      .catch(() => navigate(\"/recipes\"));\n  }, [params.id]);\n\n  const addHtmlEntities = (str) => {\n    return String(str).replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n  };\n\n  const deleteRecipe = () => {\n    const url = `/api/v1/destroy/${params.id}`;\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(() => navigate(\"/recipes\"))\n      .catch((error) => console.log(error.message));\n  };\n\n  const ingredientList = () => {\n    let ingredientList = \"No ingredients available\";\n\n    if (recipe.ingredients.length > 0) {\n      ingredientList = recipe.ingredients\n        .split(\",\")\n        .map((ingredient, index) => (\n          <li key={index} className=\"list-group-item\">\n            {ingredient}\n          </li>\n        ));\n    }\n\n    return ingredientList;\n  };\n\n  const recipeInstruction = addHtmlEntities(recipe.instruction);\n\n  return (\n    <div className=\"\">\n      <div className=\"hero position-relative d-flex align-items-center justify-content-center\">\n        <img\n          src={recipe.image}\n          alt={`${recipe.name} image`}\n          className=\"img-fluid position-absolute\"\n        />\n        <div className=\"overlay bg-dark position-absolute\" />\n        <h1 className=\"display-4 position-relative text-white\">\n          {recipe.name}\n        </h1>\n      </div>\n      <div className=\"container py-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-lg-3\">\n            <ul className=\"list-group\">\n              <h5 className=\"mb-2\">Ingredients</h5>\n              {ingredientList()}\n            </ul>\n          </div>\n          <div className=\"col-sm-12 col-lg-7\">\n            <h5 className=\"mb-2\">Preparation Instructions</h5>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: `${recipeInstruction}`,\n              }}\n            />\n          </div>\n          <div className=\"col-sm-12 col-lg-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={deleteRecipe}\n            >\n              Delete Recipe\n            </button>\n          </div>\n        </div>\n        <Link to=\"/recipes\" className=\"btn btn-link\">\n          Back to recipes\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/components/NewRecipe.jsx",["120","121","122"],[],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst NewRecipe = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instruction, setInstruction] = useState(\"\");\n\n  const stripHtmlEntities = (str) => {\n    return String(str)\n      .replace(/\\n/g, \"<br> <br>\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n  };\n\n  const onChange = (event, setFunction) => {\n    setFunction(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const url = \"/api/v1/recipes/create\";\n\n    if (name.length == 0 || ingredients.length == 0 || instruction.length == 0)\n      return;\n\n    const body = {\n      name,\n      ingredients,\n      instruction: stripHtmlEntities(instruction),\n    };\n\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"X-CSRF-Token\": token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((response) => navigate(`/recipe/${response.id}`))\n      .catch((error) => console.log(error.message));\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-lg-6 offset-lg-3\">\n          <h1 className=\"font-weight-normal mb-5\">\n            Add a new recipe to our awesome recipe collection.\n          </h1>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeName\">Recipe name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"recipeName\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setName)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipeIngredients\">Ingredients</label>\n              <input\n                type=\"text\"\n                name=\"ingredients\"\n                id=\"recipeIngredients\"\n                className=\"form-control\"\n                required\n                onChange={(event) => onChange(event, setIngredients)}\n              />\n              <small id=\"ingredientsHelp\" className=\"form-text text-muted\">\n                Separate each ingredient with a comma.\n              </small>\n            </div>\n            <label htmlFor=\"instruction\">Preparation Instructions</label>\n            <textarea\n              className=\"form-control\"\n              id=\"instruction\"\n              name=\"instruction\"\n              rows=\"5\"\n              required\n              onChange={(event) => onChange(event, setInstruction)}\n            />\n            <button type=\"submit\" className=\"btn custom-button mt-3\">\n              Create Recipe\n            </button>\n            <Link to=\"/recipes\" className=\"btn btn-link mt-3\">\n              Back to recipes\n            </Link>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipe;","/Users/hb/Desktop/Projects/gossip_frontend/src/store/postSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/LoadingSpinner.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/post-actions.ts",["123"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/postService.ts",["124","125"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/Api.ts",["126"],[],"import axios from 'axios';\n\nexport default () => {\n  return axios.create({\n    baseURL: 'http://127.0.0.1:3000/api/v1',\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    }\n  });\n};","/Users/hb/Desktop/Projects/gossip_frontend/src/hooks/redux-hooks.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/components/AppBar.tsx",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/userSlice.ts",["127"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/errorSlice.ts",[],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/store/user-actions.ts",["128"],[],"/Users/hb/Desktop/Projects/gossip_frontend/src/services/userService.ts",["129","130"],[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"139","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":14},{"ruleId":"135","severity":1,"message":"140","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"141","line":28,"column":9,"nodeType":"137","messageId":"138","endLine":28,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":4,"column":1,"nodeType":"144","endLine":23,"endColumn":3},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"145","severity":1,"message":"146","line":20,"column":6,"nodeType":"147","endLine":20,"endColumn":17,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":68,"column":9,"nodeType":"151","endLine":72,"endColumn":11},{"ruleId":"152","severity":1,"message":"153","line":25,"column":21,"nodeType":"154","messageId":"155","endLine":25,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":25,"column":48,"nodeType":"154","messageId":"155","endLine":25,"endColumn":50},{"ruleId":"152","severity":1,"message":"153","line":25,"column":75,"nodeType":"154","messageId":"155","endLine":25,"endColumn":77},{"ruleId":"156","severity":2,"message":"157","line":13,"column":18,"nodeType":"137","endLine":13,"endColumn":29},{"ruleId":"135","severity":1,"message":"158","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"159","line":4,"column":1,"nodeType":"144","endLine":25,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":10,"endColumn":3},{"ruleId":"135","severity":1,"message":"160","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":19},{"ruleId":"156","severity":2,"message":"157","line":13,"column":18,"nodeType":"137","endLine":13,"endColumn":29},{"ruleId":"135","severity":1,"message":"161","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"159","line":4,"column":1,"nodeType":"144","endLine":30,"endColumn":2},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["164"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/rules-of-hooks","React Hook \"useNavigate\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","'PostModel' is defined but never used.","Assign object to a variable before exporting as module default","'userService' is defined but never used.","'UserModel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [navigate, params.id]",{"range":"167","text":"168"},[606,617],"[navigate, params.id]"]